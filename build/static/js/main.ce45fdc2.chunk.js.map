{"version":3,"sources":["components/layout/header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["header","react_default","a","createElement","style","headerStyle","react_router_dom","linkStyle","to","background","color","textAlign","padding","textDecoration","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","backgroundColor","borderBottom","props","todo","completed","markComplete","e","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","bind","onClick","delTodo","btnStyle","Component","propType","PropTypes","object","isRequired","func","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","preventDefault","addTodo","setState","defineProperty","target","name","display","flex","placeholder","className","About","Fragment","App","Axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce45fdc2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function header() {\r\n\treturn (\r\n\t\t<header style={headerStyle}>\r\n\t\t\t<h1>TodoList</h1>\r\n\t\t\t<Link style={linkStyle} to=\"/\">\r\n\t\t\t\tHome\r\n\t\t\t</Link>{\" \"}\r\n\t\t\t|{\" \"}\r\n\t\t\t<Link style={linkStyle} to=\"/about\">\r\n\t\t\t\tAbout\r\n\t\t\t</Link>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nconst headerStyle = {\r\n\tbackground: \"#333\",\r\n\tcolor: \"#fff\",\r\n\ttextAlign: \"center\",\r\n\tpadding: \"10px\"\r\n};\r\n\r\nconst linkStyle = {\r\n\tcolor: \"#fff\",\r\n\ttextDecoration: \"none\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class TodoItem extends Component {\r\n\tgetStyle = () => {\r\n\t\treturn {\r\n\t\t\tbackgroundColor: \"#f4f4f4\",\r\n\t\t\tpadding: \"10px\",\r\n\t\t\tborderBottom: \"1px #ccc dotted\",\r\n\t\t\ttextDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\r\n\t\t};\r\n\t};\r\n\r\n\tmarkComplete = e => {};\r\n\r\n\trender() {\r\n\t\tconst { id, title } = this.props.todo;\r\n\t\treturn (\r\n\t\t\t<div style={this.getStyle()}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tonChange={this.props.markComplete.bind(this, id)}\r\n\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t{title}\r\n\t\t\t\t\t<button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTodoItem.propType = {\r\n\ttodo: PropTypes.object.isRequired,\r\n\tmarkComplete: PropTypes.func.isRequired,\r\n\tdelTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst btnStyle = {\r\n\tbackgroundColor: \"#ff0000\",\r\n\tcolor: \"#fff\",\r\n\tborder: \"none\",\r\n\tpadding: \"5px 9px\",\r\n\tborderRadius: \"50%\",\r\n\tcursor: \"pointer\",\r\n\tfloat: \"right\"\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends Component {\r\n\trender() {\r\n\t\treturn this.props.todos.map(todo => (\r\n\t\t\t<TodoItem\r\n\t\t\t\tkey={todo.id}\r\n\t\t\t\ttodo={todo}\r\n\t\t\t\tmarkComplete={this.props.markComplete}\r\n\t\t\t\tdelTodo={this.props.delTodo}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n}\r\n\r\nTodos.propTypes = {\r\n\ttodos: PropTypes.array.isRequired,\r\n\tmarkComplete: PropTypes.func.isRequired,\r\n\tdelTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class AddTodo extends Component {\r\n\tstate = {\r\n\t\ttitle: \"\"\r\n\t};\r\n\r\n\tonSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.addTodo(this.state.title);\r\n\t\tthis.setState({ title: \"\" });\r\n\t};\r\n\r\n\tonChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tstyle={{ flex: \"10\", padding: \"5px\" }}\r\n\t\t\t\t\tplaceholder=\"Add Todo...\"\r\n\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Submit\"\r\n\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\tstyle={{ flex: \"1\" }}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAddTodo.propType = {\r\n\taddTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h1>About</h1>\r\n\t\t\t<p>This is the TodoList app! Thanks Brad Traversy!</p>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n//import uuid from \"uuid\";\nimport Axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tstate = {\n\t\ttodos: []\n\t};\n\n\tcomponentDidMount() {\n\t\tAxios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(\n\t\t\tres => this.setState({ todos: res.data })\n\t\t);\n\t}\n\n\t// Toggle Complete\n\tmarkComplete = id => {\n\t\tthis.setState({\n\t\t\ttodos: this.state.todos.map(todo => {\n\t\t\t\tif (todo.id === id) {\n\t\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t\t}\n\t\t\t\treturn todo;\n\t\t\t})\n\t\t});\n\t};\n\n\t// Delete Todo\n\tdelTodo = id => {\n\t\tAxios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n\t\t\tthis.setState({\n\t\t\t\ttodos: [...this.state.todos.filter(todo => todo.id !== id)]\n\t\t\t})\n\t\t);\n\t};\n\n\t// Add Todo\n\taddTodo = title => {\n\t\tAxios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n\t\t\ttitle,\n\t\t\tcompleted: false\n\t\t}).then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<AddTodo addTodo={this.addTodo} />\n\t\t\t\t\t\t\t\t\t<Todos\n\t\t\t\t\t\t\t\t\t\ttodos={this.state.todos}\n\t\t\t\t\t\t\t\t\t\tmarkComplete={this.markComplete}\n\t\t\t\t\t\t\t\t\t\tdelTodo={this.delTodo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}